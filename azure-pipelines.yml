name: PR-$(System.PullRequest.PullRequestNumber)-$(Date:yyyyMMdd)$(Rev:.rr)

jobs:
- job: windows

  pool:
    vmImage: windows-2019

  steps:
  - checkout: self
    clean: true
  
  - powershell: |
      $PSVersionTable
    name: WindowsPowerShellVersion
    displayName: 'Windows PowerShell: Version'
    condition: succeededOrFailed()

  - powershell: |
      Get-Module -ListAvailable
    name: WindowsPowerShellVersionModules
    displayName: 'Windows PowerShell: Getting installed modules'
    condition: succeededOrFailed()

  - powershell: |
        Install-Module -Name Pester -MinimumVersion 4.7.3 -Repository PSGallery -Force #-SkipPublisherCheck
    name: WindowsPowerShellInstallPester
    displayName: 'Windows PowerShell: Install Pester'
    condition: succeededOrFailed()

  - powershell: |
      Get-Module -Name Pester -ListAvailable
    name: WindowsPowerShellPesterVersion
    displayName: 'Windows PowerShell: Pester Version'
    condition: succeededOrFailed()

  - powershell: |
      Invoke-Pester .\Tests\sthTest.tests.ps1 -OutputFile .\testResults.xml -OutputFormat NUnitXml -CodeCoverage .\sthTest.ps1 -CodeCoverageOutputFile .\codeCoverage.xml -CodeCoverageOutputFileFormat JaCoCo
    name: WindowsPowerShellInvokePester
    displayName: 'Windows PowerShell: Test with Pester'
    condition: succeededOrFailed()

  - powershell: |
      Get-ChildItem
    name: WindowsPowerShellGetFiles
    displayName: 'Windows PowerShell: List Files'
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    name: WindowsPowerShellPublishTestResult
    displayName: 'Windows PowerShell: Publish Test Results'
    inputs:
      testRunner: 'NUnit'
      testResultsFiles: 'testResults.xml' 
      searchFolder: '$(System.DefaultWorkingDirectory)'
      testRunTitle: 'Windows PowerShell: Pester'
      failTaskOnFailedTests: true
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    name: WindowsPowerShellPublishCodeCoverage
    displayName: 'Windows PowerShell: Publish Code Coverage'
    inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: $(System.DefaultWorkingDirectory)/codeCoverage.xml
    condition: succeededOrFailed()

  - template: azure-pipelines.steps.yml
    parameters:
      os: Windows



- job: macos

  pool:
    vmImage: macOS-10.13

  steps:
    - checkout: self
      clean: true
    
    - template: azure-pipelines.steps.yml
      parameters:
        os: macOS

- job: linux

  pool:
    vmImage: ubuntu-16.04

  steps:
    - checkout: self
      clean: true

    - template: azure-pipelines.steps.yml
      parameters:
        os: Linux
